basePath: /api/v1
host: 139.9.143.161:8080
info:
  contact:
    email: luwenhao_2001@outlook.com
    name: Lu Wenhao
  description: 2022秋-数据库大作业-学生选课系统API文档
  title: 学生选课系统API文档
  version: "1.0"
paths:
  /auth/log:
    post:
      description: 用户尝试进行登出，登出后再次认证需要进行try获取公钥和session
      responses:
        "200":
          description: '{\"code\":0,\"data\":null,\"msg\":\"登出成功\"}'
          schema:
            type: json
        "404":
          description: '{\"code\":-1,\"data\":null,\"msg\":\"用户未登录\"}'
          schema:
            type: string
      summary: 用户j进行登出
      tags:
      - 用户登出
  /auth/login:
    post:
      description: 用户进行登录，ID密码使用try中获取到的公钥进行加密
      parameters:
      - description: 用户id,需要使用公钥加密
        in: formData
        name: userid
        required: true
        type: string
      - description: 用户密码,需要使用公钥加密
        in: formData
        name: password
        required: true
        type: string
      responses:
        "200":
          description: '{\"code\":0,\"data\":null,\"msg\":\"登录成功/\"}'
          schema:
            type: json
        "400":
          description: '{\"code\":-3,\"data\":null,\"msg\":\"请求信息非法\"}'
          schema:
            type: string
        "401":
          description: '{\"code\":-1,\"data\":null,\"msg\":\"密码错误\"}'
          schema:
            type: string
        "404":
          description: '{\"code\":-2,\"data\":null,\"msg\":\"无此用户或用户未激活\"}'
          schema:
            type: string
      summary: 用户进行登录
      tags:
      - 用户登录
  /auth/register:
    post:
      description: 用户进行注册，ID、用户名和密码使用try中获取到的公钥进行加密
      parameters:
      - description: 用户id,需要使用公钥加密
        in: formData
        name: userid
        required: true
        type: string
      - description: 用户电子邮件,需要使用公钥加密
        in: formData
        name: emial
        required: true
        type: string
      - description: 用户密码,需要使用公钥加密
        in: formData
        name: password
        required: true
        type: string
      responses:
        "200":
          description: '{\"code\":0,\"data\":null,\"msg\":\"注册成功\"}'
          schema:
            type: json
        "400":
          description: '{\"code\":-1,\"data\":null,\"msg\":\"用户已注册\"}'
          schema:
            type: string
        "404":
          description: '{\"code\":-2,\"data\":null,\"msg\":\"无此ID用户\"}'
          schema:
            type: string
      summary: 用户进行注册
      tags:
      - 用户注册
  /auth/try:
    post:
      description: 用户尝试进行认证，服务端会检查请求中的cookie，来判断用户是否已经有效登录，如果有则延长cookie的保留时间，否则判断失败类型，如果是未尝试过认证，则会返回一个用于加密的公钥
      responses:
        "200":
          description: '{\"code\":0,\"data\":null,\"msg\":\"认证通过\"}'
          schema:
            type: string
        "401":
          description: '{\"code\":-1,\"data\":null,\"msg\":\"认证未通过\"}'
          schema:
            type: string
      summary: 用户尝试进行认证
      tags:
      - 用户认证
  /paint-egg:
    get:
      description: 没有什么特殊的，只是有点臭
      responses:
        "200":
          description: "哼～哼～哼～啊啊啊啊啊啊啊啊啊啊～\U0001F62B\U0001F62B\U0001F62B\U0001F62B\U0001F62B"
          schema:
            type: string
      summary: 这只是一个彩蛋接口，你可以GET它
      tags:
      - 彩蛋
swagger: "2.0"
